'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSortITC = getSortITC;

var _graphql = require('graphql-compose/lib/graphql');

var _utils = require('../utils');

var _FieldNames = require('./Commons/FieldNames');

var sortableTypes = ['byte', 'short', 'integer', 'long', 'double', 'float', 'half_float', 'scaled_float', 'token_count', 'date', 'boolean', 'ip', 'keyword'];

function getSortITC() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var name = (0, _utils.getTypeName)('SortEnum', opts);
  var description = 'Sortable fields from mapping';

  if (!opts.fieldMap) {
    return 'JSON';
  }

  return (0, _utils.getOrSetType)(name, function () {
    var sortableFields = (0, _FieldNames.getFieldNamesByElasticType)(opts.fieldMap, sortableTypes);
    if (sortableFields.length === 0) {
      return 'JSON';
    }

    var values = {
      _score: {
        value: '_score'
      }
    };
    sortableFields.forEach(function (fieldName) {
      var dottedName = fieldName.replace(/__/g, '.');
      values[`${fieldName}__asc`] = {
        value: { [dottedName]: 'asc' }
      };
      values[`${fieldName}__desc`] = {
        value: { [dottedName]: 'desc' }
      };
    });

    return new _graphql.GraphQLEnumType({
      name,
      description,
      values
    });
  });
}