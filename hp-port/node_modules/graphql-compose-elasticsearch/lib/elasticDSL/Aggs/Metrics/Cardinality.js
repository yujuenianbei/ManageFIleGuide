'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCardinalityITC = getCardinalityITC;

var _graphqlCompose = require('graphql-compose');

var _utils = require('../../../utils');

var _Script = require('../../Commons/Script');

var _FieldNames = require('../../Commons/FieldNames');

function getCardinalityITC() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var name = (0, _utils.getTypeName)('AggsCardinality', opts);
  var description = (0, _utils.desc)(`
    A single-value metrics aggregation that calculates an approximate count
    of distinct values. Values can be extracted either from specific fields
    in the document or generated by a script.
    [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-cardinality-aggregation.html)
  `);

  return (0, _utils.getOrSetType)(name, function () {
    return _graphqlCompose.InputTypeComposer.create({
      name,
      description,
      fields: {
        field: (0, _FieldNames.getAllFields)(opts),
        precision_threshold: {
          type: 'Int',
          defaultValue: 3000,
          description: (0, _utils.desc)(`
            Allows to trade memory for accuracy, and defines a unique count
            below which counts are expected to be close to accurate.
          `)
        },
        missing: 'String',
        script: function script() {
          return (0, _Script.getCommonsScriptITC)(opts);
        }
      }
    });
  });
}