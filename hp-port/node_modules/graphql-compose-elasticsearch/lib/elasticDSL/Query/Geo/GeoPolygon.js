'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getGeoPolygonITC = getGeoPolygonITC;

var _graphqlCompose = require('graphql-compose');

var _utils = require('../../../utils');

var _FieldNames = require('../../Commons/FieldNames');

var _Geo = require('../../Commons/Geo');

function getGeoPolygonITC() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var name = (0, _utils.getTypeName)('QueryGeoPolygon', opts);
  var description = (0, _utils.desc)(`
    A query allowing to include hits that only fall within a polygon of points.
    Requires the geo_point Mapping.
    [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-polygon-query.html)
  `);

  var subName = (0, _utils.getTypeName)('QueryGeoPolygonSettings', opts);
  var fields = (0, _FieldNames.getGeoPointAsFieldConfigMap)(opts, (0, _utils.getOrSetType)(subName, function () {
    return _graphqlCompose.InputTypeComposer.create({
      name: subName,
      fields: {
        points: [(0, _Geo.getGeoPointFC)(opts)],
        validation_method: 'String'
      }
    });
  }));

  if (typeof fields === 'object') {
    return (0, _utils.getOrSetType)(name, function () {
      return _graphqlCompose.InputTypeComposer.create({
        name,
        description,
        fields
      });
    });
  }

  // $FlowFixMe
  return {
    type: 'JSON',
    description
  };
}